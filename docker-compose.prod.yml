version: "3.6"

services:
  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    container_name: fb_nginx
    volumes:
      - ./backend/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=https"
      - "traefik.http.routers.nginx.rule=Host(`fb.sitotest.ru`)"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=letsEncrypt"

  backend:
    build:
      context: backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    container_name: fb_backend
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    container_name: fb_frontend

  # https://habr.com/ru/post/578744/
  db:
    image: postgres:14.4-alpine
    restart: unless-stopped
    container_name: fb_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - .:/var/lib/postgresql/data

networks:
  default:
    name: traefik-network
    external: true
